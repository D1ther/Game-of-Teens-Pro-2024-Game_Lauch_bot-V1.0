from aiogram import Router, Bot, F, types
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, BotCommand, CallbackQuery
from aiogram.fsm.context import FSMContext
from app.data_base.data_base import reg, create_game, show_game_name, show_game_photo, show_game_plot, select_game_plot_for_id, select_game_photo_for_id, update_game_name, update_game_photo, update_game_plot, game_removed, select_game_name
from app.fsm_states import AddGame, UpdateGame, GPT
from app.keyboards import main, game_menu, game_update_menu, cancle_markup, cancle_menu, stop_chatting_sinnbo, remove_game
from aiogram.filters.state import StateFilter
from app.gpt import question


import sqlite3 as sq



rt = Router()

# –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async def menu_cmd(bot:Bot):

    commands = [
        BotCommand(command='/start', description='–ó–∞–ø—É—Å—Ç–∏—Ç–∏/–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞üîÉ'),
        BotCommand(command='/add_game', description='–î–æ–¥–∞—Ç–∏ –≥—Ä—É –¥–æ —Å–ø–∏—Å–∫—É —ñ–≥–æ—Ä‚ûï'),
        BotCommand(command='/show_my_game', description='–ü–æ–∫–∞–∑—É—î —É—Å—ñ –≤–∞—à—ñ —ñ–≥—Ä–∏üìú'),
        BotCommand(command='/update_game', description='–û–Ω–æ–≤–∏—Ç–∏ –≥—Ä—É –∑ –≤–∞—à–æ–≥–æ —Å–ø–∏—Å–∫—ÉüîÑ'),
        BotCommand(command='/remove_game', description='–í–∏–¥–∞–ª–∏—Ç–∏ –≥—Ä—É –∑—ñ —Å–≤–æ–≥–æ —Å–ø–∏—Å–∫—Éüóë')
    ]

    await bot.set_my_commands(commands=commands)


# –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@rt.message(CommandStart())
async def start(message:Message):

    await menu_cmd(message.bot)

    await reg(tg_name=message.from_user.full_name, tg_id=message.from_user.id)

    await message.answer(text='–í—ñ—Ç–∞—é —É TG launcher bot üéÆ\n –¢—É—Ç –≤–∏ –∑–º–æ–∂–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –≤–µ—Å—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—é —Å–≤–æ—ó—Ö —ñ–≥–æ—Ä, –∞–±–æ –ª–∏—à–∏—Ç–∏ –ø—ñ–¥–∫–∞–∑–∫–∏ —É —ñ–≥—Ä–∞—Ö –¥–ª—è —Å–µ–±–µ üòÅ',
                         reply_markup=main)


# –•–µ–Ω–¥–ª–µ—Ä –¥–æ–¥–∞–≤–∞–Ω—è –≥—Ä–∏

@rt.message(Command('add_game'))
async def get_game_name(message:Message, state:FSMContext):
    
    await state.set_state(AddGame.game_name)

    await message.answer(text='–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä–∏ —è–∫—É –±–∞–∂–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∏ üïπ')


# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ –≥—Ä–∏
@rt.message(AddGame.game_name)
async def get_game_name_save(message:Message, state:FSMContext):
    game_name = message.text
    tg_id = message.from_user.id
    selected_game = await select_game_name(tg_id=tg_id, name=game_name)
    print(selected_game, game_name)

    
    game = selected_game is not None and game_name in selected_game

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î —É –±–¥ –≥—Ä–∞ –∑ —Ç–æ—á–Ω–æ —Ç–∞–∫–æ—é –∂ –Ω–∞–∑–≤–æ—é
    if game:

        await state.set_state(AddGame.game_name)
        await message.answer('–ì—Ä–∞ –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –≤–∂–µ —ñ—Å–Ω—É—î —É –≤–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ‚ùå\n –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä–∏ —è–∫—É —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏')

    else:
        
        await state.update_data(name=message.text)
        await state.set_state(AddGame.photo_game)

        await message.answer(text='–ù–∞–¥—ñ—à–ª—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∏ üñº, –∞–±–æ –±—É–¥—å-—è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—Ä—É')


# –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≥—Ä–∏
@rt.message(AddGame.photo_game)
async def get_photo_save(message:Message, state:FSMContext):

    if message.content_type == types.ContentType.PHOTO:
        await state.update_data(game_photo=message.photo[-1].file_id)
    else:
        await state.update_data(game_photo=message.text)

    await state.set_state(AddGame.plot_game)

    await message.answer(text='–ù–∞–ø–∏—à—ñ—Ç—å –æ–ø–∏—Å –≥—Ä–∏ ‚úç, –∞–±–æ –±—É–¥—å-—è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω—É –¥–ª—è –≤–∞—Å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—Ä—É')


# –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–ø–∏—Å—É –≥—Ä–∏
@rt.message(AddGame.plot_game)
async def get_plot_save(message:Message, state:FSMContext):
    await state.update_data(game_plot=message.text)
    data = await state.get_data()
    game_name = data.get('name')
    game_photo = data.get('game_photo')
    game_plot = data.get('game_plot')
    tg_id = message.from_user.id
    
    await create_game(game_name=game_name, photo=game_photo, plot=game_plot, tg_id=tg_id)
        
    await message.answer(text=f'–ì—Ä—É –±—É–ª–æ –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ üéÆ')

    await state.clear()


# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑—É —É—Å—ñ—Ö —ñ–≥–æ—Ä
@rt.message(Command('show_my_game'))
@rt.message(F.text == '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–æ—ó —ñ–≥—Ä–∏üéÆ')
async def show_my_game(message:Message):

    tg_id = message.from_user.id


    await message.answer(text='–û–±–µ—Ä—ñ—Ç—å –≥—Ä—É —è–∫—É —Ö–æ—á–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏', 
                         reply_markup= await game_menu(tg_id=tg_id))


# –ü–µ—Ä–µ–≥–ª—è–¥ —Å–≤–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—è
@rt.message(F.text == '–ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—åüßë')
async def my_profile(message:Message):
    
    await message.answer(f"–í–∞—à–µ —ñ–º'—è: {message.from_user.full_name}üßë\n –í–∞—à ID {message.from_user.id}üÜî ")

# –ü–µ—Ä–µ–≥–ª—è —ñ–≥–æ—Ä –ª—é–¥–∏–Ω–∏
@rt.callback_query(F.data.startswith('gameid_'))
async def get_game_info(callback:CallbackQuery):
    tg_id = callback.message.chat.id
    print(f'—ñ–¥ —é–∑–µ—Ä–∞: {tg_id}')
    game_name = callback.data.split('_')[1]
    game_name_for = game_name
    print(f'–ù–∞–∑–≤–∞ –≥—Ä–∏: {game_name}')


    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ñ–æ—Ç–æ –≥—Ä–∏ –∑ –±–¥
    game_photos = await select_game_photo_for_id(title=game_name, tg_id=tg_id)
    print(game_photos)
    game_photo_list = []

    for games in game_photos:
        game_name = games
        game_photo_list.append(game_name)

    for game in game_photo_list:
        photo_game = game
    print(photo_game)

    # –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–ø–∏—Å—É –≥—Ä–∏ –∑ –±–¥
    id_for_plot = callback.message.chat.id
    game_name_for_plot = callback.data.split('_')[1]

    game_plot = await select_game_plot_for_id(title=game_name_for_plot, tg_id=id_for_plot)
    print(game_plot)

    await callback.answer(' ')
    await callback.message.answer_photo(photo=photo_game, caption=f'–ù–∞–∑–≤–∞ –≥—Ä–∏: {game_name_for} \n \n –æ–ø–∏—Å –≥—Ä–∏:\n {game_plot}  ')

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∏
# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ –≥—Ä–∏
@rt.callback_query(F.data.startswith('gameupd_'))
async def get_new_game_name(callback:CallbackQuery, state:FSMContext):
    await state.set_state(UpdateGame.new_game_name)
    game_name = callback.data.split('_')[1]

    await state.update_data(game_name=game_name)

    await callback.answer('')
    await callback.message.answer(text='–ù–ø–∏—à—ñ—Ç—å –Ω–æ–≤—É –Ω–∞–∑–≤—É –¥–ª—è –≥—Ä–∏üéÆ',
                                  reply_markup=cancle_markup)

@rt.message(StateFilter(UpdateGame.new_game_name))
async def save_new_game_name(message:Message, state:FSMContext):
    await state.update_data(new_name=message.text)
    data = await state.get_data()
    new_name = data.get('new_name')
    game_name = data.get('game_name')
    tg_id = message.from_user.id
    print(tg_id)
    print(game_name)
    print(new_name)

    await update_game_name(new_game_title=new_name, title=game_name, tg_id=tg_id)

    await state.set_state(UpdateGame.new_game_plot)
    await message.answer(text='–ù–∞–ø–∏—à—ñ—Ç—å –Ω–æ–≤–∏–π –æ–ø–∏—Å –≥—Ä–∏ ‚úç',
                            reply_markup=cancle_markup)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å—É –≥—Ä–∏
@rt.message(StateFilter(UpdateGame.new_game_plot))
async def save_new_game_plot(message:Message, state:FSMContext):
    await state.update_data(new_plot=message.text)
    data = await state.get_data()
    new_plot = data.get('new_plot')
    print(new_plot)
    game_name = data.get('game_name')
    tg_id = message.from_user.id
    print(f'updated plot: {new_plot}')

    await update_game_plot(new_plot=new_plot, title=game_name, tg_id=tg_id)

    await state.set_state(UpdateGame.new_game_photo)
    await message.answer('–ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–µ —Ñ–æ—Ç–æ –≥—Ä–∏ üì∏',
                         reply_markup=cancle_markup)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ –≥—Ä–∏
@rt.message(StateFilter(UpdateGame.new_game_photo))
async def save_new_game_photo(message:Message, state:FSMContext):

    if message.content_type == types.ContentType.PHOTO:
        await state.update_data(new_photo=message.photo[-1].file_id)
    else:
        await state.update_data(new_photo=message.text)

    data = await state.get_data()
    new_photo = data.get('new_photo')
    new_name = data.get('new_name')
    tg_id = message.from_user.id

    await update_game_photo(new_photo=new_photo, title=new_name, tg_id=tg_id)

    await message.answer(text='–ì—Ä—É –æ–Ω–æ–≤–ª–µ–Ω–æ')

    await state.clear()

# –ú–µ–Ω—é –≤–∏–±–æ—Ä—É –≥—Ä–∏ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
@rt.message(Command('update_game'))
@rt.message(F.text == '–û–Ω–æ–≤–∏—Ç–∏ –≥—Ä—ÉüîÑ')
async def update_game_menu(message:Message):
    tg_id = message.from_user.id
    
    await message.answer(text='–û–±–µ—Ä—ñ—Ç—å –≥—Ä—É —è–∫—É —Ö–æ—á–µ—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏',
                            reply_markup=await game_update_menu(tg_id=tg_id))
    

# –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –¥—ñ—ó
@rt.callback_query(F.data == 'cancle')
async def cancle(callback:CallbackQuery,state:FSMContext):
    await callback.answer('')
    await state.clear()

    await callback.message.answer(text='–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüòÑ')

# –†–æ–±–æ—Ç–∞ –∑ –Ω–µ–π—Ä–æ–º–µ—Ä–µ–∂–µ—é
@rt.message(F.text == 'SinnBoü§ñ')
async def state_chatting(message:Message, state:FSMContext):
    await state.set_state(GPT.chatting)

    await message.answer(text="–í—ñ—Ç–∞—é!\n –Ø —à—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç –Ω–∞ —ñ–º'—è SinnBoü§ñ \n –†–∞–Ω—ñ—à–µ, —è –±—É–≤ –≥–µ–π–º–µ—Ä–æ–º, —è–∫–∏–π –ø—Ä–æ–π—à–æ–≤ –Ω–µ 1 —Ç–∏—Å—è—á—É —ñ–≥–æ—Ä. –¢–µ–ø–µ—Ä —è –≤–ª–∞—à—Ç—É–≤–∞–≤—Å—è –ø–æ–º—ñ—á–Ω–∏–∫–æ–º –¥–ª—è –≥–µ–π–º–µ—Ä—ñ–≤ —ñ –≥–æ—Ç–æ–≤–∏–π –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –≤–∞—à—ñ –ø–∏—Ç–∞–Ω–Ω—è! –Ø —á–µ–∫–∞—é –≤–∞—à–∏—Ö –ø–∏—Ç–∞–Ω—å \n\n ‚ùó–û—Å–∫–ª—å–∫–∏ SinnBo –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É –º–æ–¥–µ–ª—å —à—Ç—É—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É, —ñ–Ω–æ–¥—ñ –º–æ–∂–ª–∏–≤—ñ –±–∞–≥–∏. –¢–∞–∫–æ–∂ SinnBo –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î —ñ—Å—Ç–æ—Ä—ñ—é –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∑–∞–ø–∏—Ç—ñ–≤, —Ç–∞ –¥–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Ç–æ–π, —â–æ –≤–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —Ç—ñ–ª—å–∫–∏ —â–æ. –©–µ –∑–∞–ø–∏—Ç–∏ –º–æ–∂—É—Ç—å –æ–±—Ä–æ–±–ª—è—Ç–∏—Å—è –ø–æ–≤—ñ–ª—å–Ω–æ‚ùó")

@rt.message(StateFilter(GPT.chatting))
async def chatting(message:Message, state:FSMContext):
    process = await message.answer(text='–í–∞—à –∑–∞–ø–∏—Ç –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è‚ôª')
    await state.update_data(prompt=message.text)
    data = await state.get_data()
    prompt = data.get("prompt")
    print(prompt)
    print(message.from_user.full_name)

    answer = await question(promt=prompt)
    await message.reply(answer, 
                         reply_markup=stop_chatting_sinnbo)
    
    await process.delete()
    
# –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ —á–∞—Ç
@rt.callback_query(F.data == 'stop_chatting')
async def stop_chatting_with_SinnBo(callback:CallbackQuery, state:FSMContext):
    await state.clear()

    await callback.answer('')
    await callback.message.edit_text(text='–í–∏ –∑—É–ø–∏–Ω–∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É –∑ SinnBoü§ñ')

# –ö–æ–º–∞–Ω–¥–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—Ä–∏
@rt.message(Command('remove_game'))
async def game_remove(message:Message):
    tg_id = message.from_user.id

    await message.answer(text='–û–±–µ—Ä—ñ—Ç—å –≥—Ä—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—èüóë', 
                         reply_markup=await remove_game(tg_id=tg_id))

# –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≥—Ä–∏
@rt.callback_query(F.data.startswith('gamedel_'))
async def get_remove_game(callback:CallbackQuery):
    await callback.answer('')
    game_name = callback.data.split('_')[1]
    tg_id = callback.message.chat.id

    await game_removed(name=game_name, tg_id=tg_id)
    await callback.message.answer(text=f'–ì—Ä—É {game_name}, –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ‚úî')
